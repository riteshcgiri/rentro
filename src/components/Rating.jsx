import React from 'react';

const Rating = (rating) => {
    const userRating = rating.rating;
    return (
        <>
            {
                Array.from({ length: Math.round(userRating) }).map((_, index) =>
                    <svg key={index} width="15" height="15" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fillRule="evenodd" clipRule="evenodd" d="M9.16676 2.65838C9.22433 2.47584 9.33858 2.31641 9.49294 2.20324C9.64729 2.09007 9.8337 2.02905 10.0251 2.02905C10.2165 2.02905 10.4029 2.09007 10.5573 2.20324C10.7116 2.31641 10.8259 2.47584 10.8834 2.65838L12.4334 7.42505H17.4334C17.6317 7.41755 17.8269 7.47516 17.9893 7.58908C18.1517 7.70299 18.2724 7.86695 18.3329 8.05589C18.3933 8.24484 18.3903 8.44838 18.3242 8.63542C18.2581 8.82247 18.1325 8.98273 17.9668 9.09171L13.9084 12.0334L15.4584 16.8084C15.5197 16.9903 15.5213 17.187 15.4628 17.3698C15.4044 17.5526 15.2891 17.712 15.1336 17.8246C14.9782 17.9372 14.7908 17.9972 14.5989 17.9958C14.407 17.9944 14.2205 17.9316 14.0668 17.8167L10.0001 14.8417L5.94176 17.7917C5.78802 17.9066 5.60157 17.9694 5.40963 17.9708C5.2177 17.9722 5.03034 17.9122 4.87491 17.7996C4.71948 17.687 4.60412 17.5276 4.54569 17.3448C4.48725 17.162 4.4888 16.9653 4.5501 16.7834L6.1001 12.0084L2.04176 9.06671C1.876 8.95773 1.75047 8.79747 1.68437 8.61042C1.61826 8.42338 1.6152 8.21984 1.67566 8.03089C1.73612 7.84195 1.85678 7.67799 2.0192 7.56408C2.18161 7.45016 2.37686 7.39255 2.5751 7.40005H7.5751L9.16676 2.65838Z" fill="#FBAD39" />
                    </svg>
                )
            }
            {
                userRating < 5 && Array.from({ length: 5 - Math.round(userRating) }).map((_, index) =>
                    <svg key={index} width="14" height="14" viewBox="0 0 20 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fillRule="evenodd" clipRule="evenodd" d="M9.16664 1.65835C9.2242 1.47581 9.33846 1.31638 9.49281 1.20321C9.64717 1.09004 9.83358 1.02902 10.025 1.02902C10.2164 1.02902 10.4028 1.09004 10.5571 1.20321C10.7115 1.31638 10.8257 1.47581 10.8833 1.65835L12.4333 6.42502H17.4333C17.6315 6.41752 17.8268 6.47513 17.9892 6.58905C18.1516 6.70296 18.2723 6.86692 18.3327 7.05586C18.3932 7.24481 18.3902 7.44835 18.324 7.63539C18.2579 7.82244 18.1324 7.9827 17.9666 8.09168L13.9083 11.0333L15.4583 15.8083C15.5196 15.9902 15.5212 16.187 15.4627 16.3698C15.4043 16.5526 15.2889 16.712 15.1335 16.8246C14.9781 16.9372 14.7907 16.9972 14.5988 16.9958C14.4068 16.9943 14.2204 16.9316 14.0666 16.8167L9.99998 13.8417L5.94164 16.7917C5.7879 16.9066 5.60145 16.9693 5.40951 16.9708C5.21758 16.9722 5.03022 16.9122 4.87479 16.7996C4.71936 16.687 4.604 16.5276 4.54557 16.3448C4.48713 16.162 4.48868 15.9652 4.54998 15.7833L6.09998 11.0083L2.04164 8.06668C1.87588 7.9577 1.75035 7.79744 1.68424 7.61039C1.61813 7.42335 1.61508 7.21981 1.67554 7.03086C1.736 6.84192 1.85666 6.67796 2.01907 6.56405C2.18149 6.45013 2.37673 6.39252 2.57498 6.40002H7.57498L9.16664 1.65835Z" stroke="#90A3BF" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
                    </svg>

                )

            }
        </>

    );
};

export default Rating;